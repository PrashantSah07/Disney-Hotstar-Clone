import React, { useEffect, useState } from 'react';

const API_KEY = "6b03720f12b1780deb6f627085df7549";
const movieName = "Inception";

const App = () => {
  const [movie, setMovie] = useState(null);
  const [trailer, setTrailer] = useState(null);

  useEffect(() => {
    const fetchMovie = async () => {
      try {
        const res = await fetch(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${movieName}`);
        const data = await res.json();
        const movieId = data.results[0]?.id;

        const detailsRes = await fetch(
          `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&append_to_response=videos,credits,images,recommendations,reviews`
        );
        const details = await detailsRes.json();
        setMovie(details);
        console.log(details)

        const officialTrailer = details.videos.results.find(
          v => v.type === "Trailer" && v.site === "YouTube"
        );
        setTrailer(officialTrailer);

      } catch (err) {
        console.error("Error fetching movie:", err);
      }
    };

    fetchMovie();
  }, []);

  if (!movie) return <div className="text-center mt-20 text-lg">Loading...</div>;

  return (
    <div className="min-h-screen bg-gray-900 text-white flex items-center justify-center p-6">
      <div className="bg-gray-800 rounded-2xl shadow-xl overflow-hidden max-w-4xl w-full md:flex">
        <img
          className="w-full md:w-1/3 object-cover"
          src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}
          alt={movie.title}
        />
        <div className="p-6 md:w-2/3">
          <h1 className="text-3xl font-bold mb-2">{movie.title} ({movie.release_date?.slice(0, 4)})</h1>
          <p className="text-sm text-yellow-400 mb-3">‚≠ê {movie.vote_average} / 10</p>
          <p className="mb-4 text-gray-300">{movie.overview}</p>
          <div className="text-sm text-gray-400">
            <p><strong>Genres:</strong> {movie.genres?.map(g => g.name).join(', ')}</p>
            <p><strong>Runtime:</strong> {movie.runtime} mins</p>
            <p><strong>Language:</strong> {movie.original_language.toUpperCase()}</p>
            <p><strong>Status:</strong> {movie.status}</p>
            <p><strong>Release Date:</strong> {movie.release_date}</p>
            {trailer && (
              <div className="mt-4">
                <h2 className="text-lg font-semibold mb-2">üé¨ Watch Trailer</h2>
                <div className="aspect-w-16 aspect-h-9">
                  <iframe
                    className="w-full rounded-lg"
                    src={`https://www.youtube.com/embed/${trailer.key}`}
                    title={trailer.name}
                    frameBorder="0"
                    allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                    allowFullScreen
                  ></iframe>
                </div>
              </div>
            )}
          </div>
        </div>

      </div>
    </div>
  );
};

export default App;









import React, { useState, useEffect } from 'react';

const API_KEY = "6b03720f12b1780deb6f627085df7549";

const genres = {
  "Action": 28, 
  "Adventure": 12, ‚úÖ
  "Animation": 16, ‚úÖ
  "Comedy": 35,
  "Crime": 80, ‚úÖ
  "Documentary": 99, ‚úÖ
  "Drama": 18, ‚úÖ
  "Family": 10751, ‚úÖ
  "Fantasy": 14,
  "History": 36,
  "Horror": 27, ‚úÖ
  "Music": 10402, ‚úÖ
  "Mystery": 9648, ‚úÖ
  "Romance": 10749, ‚úÖ
  "Kids": 10762, ‚úÖ
  "Science Fiction": 878, ‚úÖ
  "TV Movie": 10770,
  "Thriller": 53, ‚úÖ
  "War": 10752, ‚úÖ
  "Western": 37, ‚úÖ
};


const App = () => {
  const [movies, setMovies] = useState([]);
  const [selectedGenre, setSelectedGenre] = useState("Science Fiction");

  const fetchMovies = async (genreId) => {
    try {
      const res = await fetch(`https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&with_genres=${genreId}`);
      const data = await res.json();
      setMovies(data.results);
    } catch (err) {
      console.error("Error fetching movies:", err);
    }
  };

  useEffect(() => {
    fetchMovies(genres[selectedGenre]);
  }, [selectedGenre]);

  return (
    <div className="p-6 bg-black text-white">
      <div className="mb-4">
        <h1 className="text-3xl font-bold">Movie Categories</h1>
        <select
          className="bg-gray-800 text-white p-2 rounded"
          value={selectedGenre}
          onChange={(e) => setSelectedGenre(e.target.value)}
        >
          {Object.keys(genres).map((genre) => (
            <option key={genre} value={genre}>
              {genre}
            </option>
          ))}
        </select>
      </div>

      <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
        {movies.map((movie) => (
          <div key={movie.id} className="bg-gray-800 p-4 rounded-lg">
            <img
              className="w-full rounded-lg"
              src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}
              alt={movie.title}
            />
            <h3 className="text-xl mt-4">{movie.title}</h3>
            <p className="text-gray-400 text-sm">{movie.release_date}</p>
            <p className="mt-2">{movie.overview.slice(0, 100)}...</p>
          </div>
        ))}
      </div>
    </div>
  );
};

export default App;